plugins {
	id 'fabric-loom' version "1.7-SNAPSHOT"
	id 'io.github.ladysnake.chenille' version '0.11.3'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

chenille {
	javaVersion = 17
	configurePublishing {
		withCurseforgeRelease()
		withGithubRelease()
		withLadysnakeMaven()
		withModrinthRelease()
	}
}

repositories {
	maven {
		url "https://maven.ladysnake.org/releases"
		content {
			includeGroup("org.ladysnake")
			includeGroupByRegex("dev\\.onyxstudios\\..*")
		}
	}
	maven {
		url "https://maven.ladysnake.org/snapshots"
		content {
			includeGroup("org.ladysnake")
			includeGroup("xyz.amymialee")
		}
	}
	// MixinExtras
	maven {
		url "https://jitpack.io"
		content {
			includeGroupByRegex "com\\.github\\..*"
		}
	}
	maven {
		name "modrinth"
		url "https://api.modrinth.com/maven"
		content {
			includeGroup('maven.modrinth')
		}
	}
	// modmenu
	maven {
		name = 'TerraformersMC'
		url = 'https://maven.terraformersmc.com/'
	}
	// MialeeMisc
	maven { url "https://maven.willbl.dev/releases" }
	// bookshelf
	maven { url 'https://maven.blamejared.com' }
}

dependencies {
	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modImplementation(libs.mialeemisc) {
		exclude group: "dev.emi"
	}
	include (libs.mialeemisc)

	modRuntimeOnly(libs.modmenu) {
		exclude group: "net.fabricmc"
	}
	modCompileOnly(libs.enchancement)
	modCompileOnly(libs.cca.base)
	modRuntimeOnly(libs.bundles.enchancement) {
		exclude group: "net.fabricmc.fabric-api"
	}
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

java {
	withSourcesJar()
}

jar {
	from "LICENSE"
}
